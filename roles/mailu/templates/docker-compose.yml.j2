version: "3.7"
networks:
 {{ nginx_network_name }}:
    driver: overlay
    external: true
{% if create_stack_network is defined and create_stack_network|bool==true %}
 {{ stack_network_name }}:
    driver: overlay
    external: true
{% endif %}
{% if ipv6_enabled %}
 bridge:
    external: true
{% endif %}

services:
  redis:
    image: redis:6.0-alpine
    volumes:
      - "{{ mailu_volume_folder }}/redis:/data"
    networks:
      - {{ stack_network_name }}
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5       

  {{ mailu_db_host }}:
    image: postgres:{{ mailu_postgres_version }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/data/postgres_data:/var/lib/postgresql/data"
      #- "{{ mailu_volume_folder }}/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf"
    environment:
      POSTGRES_DB: "{{ mailu_db_name }}"
      POSTGRES_USER: "{{ mailu_db_user }}"
      POSTGRES_PASSWORD: "{{ mailu_db_pass }}"
    ports:
      - '5432'      
    networks:
      - {{ stack_network_name }}
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d {{ mailu_db_name }} -U {{ mailu_db_user }}"]
      interval: 10s
      timeout: 5s
      retries: 5        
  
  front:
    image: mailu/nginx:{{ mailu_version }}
    env_file: "{{ mailu_volume_folder}}/mailu.env"
    environment:
      VIRTUAL_HOST: "{{ nginx_subdomain }}{{ nginx_domain }}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
{% if existing_certs is defined and existing_certs|bool==true %}
      - "{{ ssl_certs_path }}/{{ nginx_domain }}.crt:/certs/cert.pem" 
      - "{{ ssl_private_path }}/{{ nginx_domain }}.key:/certs/key.pem"
{% else %}
      - "/etc/letsencrypt/live/{{ nginx_subdomain }}{{ nginx_domain }}/fullchain.pem:/certs/cert.pem" 
      - "/etc/letsencrypt/live/{{ nginx_subdomain }}{{ nginx_domain }}/privkey.pem:/certs/key.pem"
{% endif %}   
      - "{{ mailu_volume_folder }}/overrides/nginx:/overrides:ro"
    logging:
      driver: json-file      
    ports:
      - "80"
      - "443"
      - target: 25
        published: 25
        mode: overlay
      - target: 465
        published: 465
        mode: overlay
      - target: 587
        published: 587
        mode: overlay
      - target: 110
        published: 110
        mode: overlay
      - target: 995
        published: 995
        mode: overlay
      - target: 143
        published: 143
        mode: overlay
      - target: 993
        published: 993
        mode: overlay
    networks:
      - {{ stack_network_name }}
      - {{ nginx_network_name }}
{% if ipv6_enabled %}
      - bridge
{% endif %}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      disable: true           
    #healthcheck: { test: ["CMD", "pgrep", "'nginx: master process'"], timeout: 3s, interval: 10s, retries: 3 }

  admin:
    image: mailu/admin:{{ mailu_version }}
    env_file: "{{ mailu_volume_folder}}/mailu.env"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/data:/data"
      - "{{ mailu_volume_folder }}/dkim:/dkim"
      - "./manage.py:/app/mailu/manage.py"
    networks:
      - {{ stack_network_name }}
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
    healthcheck:
      disable: true      
    # healthcheck:
    #   test: curl -f https://{{ nginx_subdomain }}{{ nginx_domain }}/admin
    #   interval: 30s
    #   retries: 3      

  imap:
    image: mailu/dovecot:latest
    env_file: "{{ mailu_volume_folder}}/mailu.env"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/mail:/mail"
      - "{{ mailu_volume_folder }}/overrides/dovecot:/overrides"
{% if existing_certs is defined and existing_certs|bool==true %}
      - "{{ ssl_certs_path }}/{{ nginx_domain }}.crt:/etc/ssl/dovecot.pem"
      - "{{ ssl_private_path }}/{{ nginx_domain }}.key:/etc/ssl/dovecot.key"
{% else %}
      - "/etc/letsencrypt/live/{{ nginx_subdomain }}{{ nginx_domain }}/fullchain.pem:/etc/ssl/dovecot.pem"
      - "/etc/letsencrypt/live/{{ nginx_subdomain }}{{ nginx_domain }}/privkey.pem:/etc/ssl/dovecot.key"
{% endif %}         
    networks:
      - {{ stack_network_name }}
{% if ipv6_enabled %}
      - bridge
{% endif %}
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
#    healthcheck:
#      disable: true       
    healthcheck: { test: ["CMD-SHELL", "doveadm service status"], timeout: 5s, interval: 10s, retries: 3 }

  smtp:
    image: mailu/postfix:{{ mailu_version }}
    env_file: "{{ mailu_volume_folder}}/mailu.env"
    environment:
      - POD_ADDRESS_RANGE={{ stack_subnet }}{% if ipv6_enabled %},{{subnet6 }}
{% endif %}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/mailqueue:/queue"
      - "{{ mailu_volume_folder }}/overrides/postfix:/overrides:ro"
{% if virtual_corteza is defined and virtual_corteza|bool==true %}
      - "{{ mailu_volume_folder }}/virtual_alias:/etc/postfix/virtual_alias"
#      - "{{ mailu_volume_folder }}/aliases:/etc/aliases"
#      - "{{ mailu_volume_folder }}/transport_map:/etc/postfix/transport_map"
      - "{{ mailu_volume_folder }}/forward:/root/.forward"
{% endif %}
    networks:
      - {{ stack_network_name }}
{% if ipv6_enabled %}
      - bridge
{% endif %}      
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
##    healthcheck: { test: ["CMD-SHELL", "nc localhost 25 | grep -qE '^220.*ESMTP Postfix'"], timeout: 3s, interval: 10s, retries: 5 }
    healthcheck:
      disable: true 

  antispam:
    image: mailu/rspamd:{{ mailu_version }}
    env_file: "{{ mailu_volume_folder}}/mailu.env"
    environment:
      - POD_ADDRESS_RANGE={{ stack_subnet }}{% if ipv6_enabled %},{{subnet6 }}
{% endif %}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/filter:/var/lib/rspamd"
      - "{{ mailu_volume_folder }}/dkim:/dkim"
      - "{{ mailu_volume_folder }}/overrides/rspamd:/etc/rspamd/override.d:ro"
    networks:
      - {{ stack_network_name }}
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
#    healthcheck:
#      disable: true       
    healthcheck: { test: ["CMD-SHELL", "/usr/bin/rspamadm control stat"], timeout: 3s, interval: 10s, retries: 5 } 

  # Optional services
  antivirus:
    image: mailu/clamav:{{ mailu_version }}
    env_file: mailu.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/filter:/data"
    networks:
      - {{ stack_network_name }}      
    deploy:
      replicas: 1
    # healthcheck:
    #   disable: true       
    healthcheck: { test: ["CMD", "pgrep", "-x", "clamd"], timeout: 3s, interval: 10s, retries: 5 }

  webmail:
    image: mailu/{{ mailu_webmail_type }}:{{ mailu_version }}
    env_file: "{{ mailu_volume_folder}}/mailu.env"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/webmail:/data"
    networks:
      - {{ stack_network_name }}      
    deploy:
      restart_policy:
        condition: on-failure
    deploy:
      replicas: 1
    healthcheck:
      disable: true      
    # healthcheck:
    #   test: curl -f https://{{ nginx_subdomain }}{{ nginx_domain }}/webmail
    #   interval: 30s
    #   retries: 3

{% if mailu_webmail_type is defined and mailu_webmail_type=="roundcube" %}
  {{ roundcube_db_host }}:
    image: postgres:{{ mailu_postgres_version }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/roundcube/postgres_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: "{{ roundcube_db_name }}"
      POSTGRES_USER: "{{ roundcube_db_user }}"
      POSTGRES_PASSWORD: "{{ roundcube_db_pass }}"
    ports:
      - '5432'      
    networks:
      - {{ stack_network_name }}
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ roundcube_db_user }}"]
      interval: 10s
      timeout: 5s
      retries: 5   
{% endif %}

#CalDAV- und CardDAV-Server 
  webdav:
    image: mailu/radicale:{{ mailu_version }}
    env_file: "{{ mailu_volume_folder}}/mailu.env"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/dav:/data"
    networks:
      - {{ stack_network_name }}
{% if ipv6_enabled %}
      - bridge
{% endif %}      
    deploy:
      replicas: 1
    healthcheck:
      test: curl -f http://127.0.0.1:5232
      interval: 5s
      retries: 3

  fetchmail:
    image: mailu/fetchmail:{{ mailu_version }}
    env_file: "{{ mailu_volume_folder}}/mailu.env"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ mailu_volume_folder }}/data:/data"
    networks:
      - {{ stack_network_name }}
{% if ipv6_enabled %}
      - bridge
{% endif %}      
    deploy:
      replicas: 1
    healthcheck:
      disable: true

#todo investigate probs rspamd: rspamd_monitored_dns_cb: DNS query blocked on multi.uribl.com (127.0.0.1 returned), possibly due to high volume
#resolve with unbound?
#https://mailu.io/1.7/faq.html#rspamd-dns-query-blocked-on-multi-uribl-com
#https://github.com/ofthesun9/unbound-mailu
#https://gist.github.com/goofball222/62fd016cbecca40f4fded34f013d4f81
#https://github.com/Mailu/Mailu/tree/master/docs/swarm/master
#   unbound:
#     image: ofthesun9/unbound-mailu:master
#     ports:
#      - 0.0.0.0:53:53/tcp
#      - 0.0.0.0:53:53/udp
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#     deploy:
#       mode: global
# #      mode: replicated
# #      replicas: 1
#       placement:
#         constraints: [node.role == worker]      

# unbound:
#   image: mvance/unbound
#   ports:
#    - 53:53/tcp
#    - 53:53/udp
#   volumes:
#     - /etc/localtime:/etc/localtime:ro
#     - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#   networks:
#     - mailu_net
#   deploy:
#     replicas: 1
